(function(){"use strict";var t={9759:function(t,e,o){var n=o(6369),i=function(){var t=this,e=t._self._c;return e("div",{attrs:{id:"app"}},[e("HelloWorld")],1)},s=[],r=function(){var t=this,e=t._self._c;return e("div",{staticClass:"container"},[e("b-modal",{on:{ok:t.addNode},model:{value:t.addVortixModal,callback:function(e){t.addVortixModal=e},expression:"addVortixModal"}},[t._v("Inserte el nombre del Nodo: "),e("b-form-input",{staticClass:"mt-2",attrs:{placeholder:"Por ejemplo: un lugar geografico"},model:{value:t.nodeName,callback:function(e){t.nodeName=e},expression:"nodeName"}})],1),e("b-modal",{attrs:{size:"sm",title:"Error!","ok-only":""},model:{value:t.showError,callback:function(e){t.showError=e},expression:"showError"}},[e("p",{staticClass:"my-1"},[t._v(" Ya existe este record, por favor escoge otro destino diferente!!! ")])]),e("b-modal",{attrs:{size:"lg",title:"Resultado!!!!","ok-only":""},on:{ok:function(e){t.showResult=!1}},model:{value:t.showResult,callback:function(e){t.showResult=e},expression:"showResult"}},[e("h1",[t._v(" El camino más corto a tomar desde: "+t._s(this.targetOrigin)+" hasta "+t._s(this.targetDestination)+" es: ")]),t._l(t.result,(function(o,n){return e("span",{key:n},[t._v(" "+t._s(o)+" --------- ")])}))],2),e("b-modal",{on:{ok:t.addWeight},model:{value:t.addWeightModal,callback:function(e){t.addWeightModal=e},expression:"addWeightModal"}},[t._v(" Adicionar peso: "),e("b-container",[e("b-row",[e("b-col",{attrs:{cols:"12"}},[e("label",{attrs:{for:"originNode"}},[t._v("Origen:")]),e("b-form-select",{attrs:{options:t.nodes},model:{value:t.originNode,callback:function(e){t.originNode=e},expression:"originNode"}})],1)],1),e("b-row",[e("b-col",{attrs:{cols:"12"}},[e("label",{attrs:{for:"destinationNode"}},[t._v("Destino:")]),e("b-form-select",{staticClass:"mt-3",attrs:{options:t.destinations,size:"sm"},model:{value:t.destinationNode,callback:function(e){t.destinationNode=e},expression:"destinationNode"}})],1)],1),e("b-row",{staticClass:"mt-2"},[e("b-col",{attrs:{cols:"12"}},[e("label",{attrs:{for:"destinationValue"}},[t._v("Peso:")]),e("b-form-input",{staticClass:"mt-2",attrs:{type:"number",placeholder:"Inserte un valor numerico"},model:{value:t.weight,callback:function(e){t.weight=e},expression:"weight"}})],1)],1),e("b-table",{attrs:{striped:"",hover:"",items:t.vortex},scopedSlots:t._u([{key:"cell(acciones)",fn:function(o){return[e("b-button",{attrs:{variant:"danger"},on:{click:function(e){return t.deleteWeight(o.item)}}},[t._v("Eliminar")])]}}])}),e("b-row",[e("b-button",{staticClass:"ml-3 mt-3",attrs:{variant:"primary"},on:{click:t.addPath}},[t._v("Adicionar camino")])],1)],1)],1),e("h1",[t._v("Investigación de Operaciones - Árbol de Expansión Mínima")]),e("div",[t._v(" El algoritmo de Dijkstra, también llamado algoritmo de caminos mínimos, es un algoritmo para la determinación del camino más corto, dado un vértice origen, hacia el resto de los vértices en un grafo que tiene pesos en cada arista. Su nombre alude a Edsger Dijkstra, científico de la computación de los Países Bajos que lo concibió en 1956 y lo publicó por primera vez en 1959.1​2​ La idea subyacente en este algoritmo consiste en ir explorando todos los caminos más cortos que parten del vértice origen y que llevan a todos los demás vértices; cuando se obtiene el camino más corto desde el vértice origen hasta el resto de los vértices que componen el grafo, el algoritmo se detiene. Se trata de una especialización de la búsqueda de costo uniforme y, como tal, no funciona en grafos con aristas de coste negativo (al elegir siempre el nodo con distancia menor, pueden quedar excluidos de la búsqueda nodos que en próximas iteraciones bajarían el costo general del camino al pasar por una arista con costo negativo) ")]),e("div",{staticClass:"container mt-5"},[e("b-button",{attrs:{variant:"primary"},on:{click:function(e){t.addVortixModal=!0}}},[t._v("Adicionar Arista")]),e("div",{staticClass:"d-flex flex-wrap justify-content-center"},t._l(t.nodes,(function(o,n){return e("b-card",{key:n,staticClass:"mb-2 mt-2 mr-2",staticStyle:{"max-width":"20rem"},attrs:{title:o}},[e("b-card-text",[t._v(" Este es un nodo o vértice del grafo ")]),e("b-button",{attrs:{variant:"danger"},on:{click:function(e){return t.deleteNode(o)}}},[t._v("Eliminar")])],1)})),1)],1),e("div",{staticClass:"container mt-5"},[e("b-button",{attrs:{disabled:0===t.nodes.length,variant:"secondary"},on:{click:function(e){t.addWeightModal=!0}}},[t._v("Adicionar Peso")]),e("div",{staticClass:"d-flex flex-wrap justify-content-center"},[e("b-table",{attrs:{striped:"",hover:"",items:t.items},scopedSlots:t._u([{key:"cell(start)",fn:function(e){return[t._v(" "+t._s(e.start)+" ")]}},{key:"cell(distances)",fn:function(e){return[t._v(" "+t._s(e.distances)+" ")]}},{key:"cell(acciones)",fn:function(o){return[e("b-button",{attrs:{variant:"danger"},on:{click:function(e){return t.deleteWeight(o.item)}}},[t._v("Eliminar")])]}}])})],1),e("b-row",{staticClass:"mt-2"},[e("b-container",[e("b-row",[e("b-col",{attrs:{cols:"6"}},[e("label",{attrs:{for:"originNode"}},[t._v("Desde:")]),e("b-form-select",{attrs:{options:t.nodes},model:{value:t.targetOrigin,callback:function(e){t.targetOrigin=e},expression:"targetOrigin"}})],1)],1),e("b-row",[e("b-col",{attrs:{cols:"6"}},[e("label",{attrs:{for:"destinationNode"}},[t._v("Hasta:")]),e("b-form-select",{staticClass:"mt-3",attrs:{options:t.nodes.filter((t=>t!==this.targetOrigin)),size:"sm"},model:{value:t.targetDestination,callback:function(e){t.targetDestination=e},expression:"targetDestination"}})],1)],1),e("b-button",{staticClass:"mb-5 mt-4",attrs:{size:"lg",variant:"success"},on:{click:t.submitData}},[t._v("Calcular la ruta mas corta!")])],1)],1)],1)],1)},a=[];o(7658);function l(){this._nodes=[],this.enqueue=function(t,e){this._nodes.push({key:e,priority:t}),this.sort()},this.dequeue=function(){return this._nodes.shift().key},this.sort=function(){this._nodes.sort((function(t,e){return t.priority-e.priority}))},this.isEmpty=function(){return!this._nodes.length}}function c(){var t=1/0;this.vertices={},this.addVertex=function(t,e){this.vertices[t]=e},this.shortestPath=function(e,o){var n,i,s,r,a=new l,c={},d={},u=[];for(i in this.vertices)i===e?(c[i]=0,a.enqueue(0,i)):(c[i]=t,a.enqueue(t,i)),d[i]=null;while(!a.isEmpty()){if(n=a.dequeue(),n===o){u=[];while(d[n])u.push(n),n=d[n];break}if(n&&c[n]!==t)for(s in this.vertices[n])r=c[n]+this.vertices[n][s],r<c[s]&&(c[s]=r,d[s]=n,a.enqueue(r,s))}return u}}var d={name:"HelloWorld",components:{},mounted(){},data(){return{count:0,addVortixModal:!1,addWeightModal:!1,nodeName:null,nodes:["A","B","C"],originNode:null,destinationNode:null,originValue:null,weight:null,weights:[],showError:!1,targetOrigin:null,targetDestination:null,result:[],showResult:!1,ammount:0,vortex:[]}},methods:{addPath(){this.vortex.push({start:this.originNode,distances:[{to:this.destinationNode,value:this.weight}]})},addNode(){this.nodes.push(this.nodeName),this.nodeName=null},deleteNode(t){this.nodes=this.nodes.filter((e=>e!==t))},addWeight(){let t="",e=[];for(let n=0;n<this.vortex.length;n++){const o=this.vortex[n];t=o.start;for(let t=0;t<o.distances.length;t++){const n=o.distances[t];e.push(n)}}console.log(e);let o={};e.forEach((t=>{o[t.to]=t.value})),this.weights.push({start:t,distances:o}),this.vortex=[]},convertArrayToObject(t,e){const o={};return t.reduce(((t,o)=>({...t,[o[e]]:o})),o)},deleteWeight(t){let e=0;for(let o=0;o<this.weights.length;o++){this.weights[o].destination===t.destino&&this.weights[o].origin===t.origen&&this.weights[o].weight===t.peso&&(e=o);break}this.weights.splice(e,1)},submitData(){console.log("submiting data");const t=new c;this.weights.forEach((e=>{t.addVertex(e.start,e.distances)})),console.log(t),console.log(t.shortestPath(this.targetOrigin,this.targetDestination).concat([this.targetOrigin]).reverse()),this.result=t.shortestPath(this.targetOrigin,this.targetDestination).concat([this.targetOrigin]).reverse(),this.showResult=!0}},computed:{items(){return this.weights.map((t=>({origen:t.start,destinos:t.destinations,peso:t.weight,acciones:""})))},destinations(){return this.nodes.filter((t=>t!==this.originNode))}}},u=d,h=o(1001),f=(0,h.Z)(u,r,a,!1,null,"18aa5fee",null),m=f.exports,g={name:"App",components:{HelloWorld:m}},v=g,b=(0,h.Z)(v,i,s,!1,null,null,null),p=b.exports,w=o(5996),_=o(9425);o(7024);n["default"].config.productionTip=!1,n["default"].use(w.XG7),n["default"].use(_.A7),new n["default"]({render:t=>t(p)}).$mount("#app")}},e={};function o(n){var i=e[n];if(void 0!==i)return i.exports;var s=e[n]={exports:{}};return t[n](s,s.exports,o),s.exports}o.m=t,function(){var t=[];o.O=function(e,n,i,s){if(!n){var r=1/0;for(d=0;d<t.length;d++){n=t[d][0],i=t[d][1],s=t[d][2];for(var a=!0,l=0;l<n.length;l++)(!1&s||r>=s)&&Object.keys(o.O).every((function(t){return o.O[t](n[l])}))?n.splice(l--,1):(a=!1,s<r&&(r=s));if(a){t.splice(d--,1);var c=i();void 0!==c&&(e=c)}}return e}s=s||0;for(var d=t.length;d>0&&t[d-1][2]>s;d--)t[d]=t[d-1];t[d]=[n,i,s]}}(),function(){o.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return o.d(e,{a:e}),e}}(),function(){o.d=function(t,e){for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})}}(),function(){o.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"===typeof window)return window}}()}(),function(){o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}}(),function(){o.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}}(),function(){var t={143:0};o.O.j=function(e){return 0===t[e]};var e=function(e,n){var i,s,r=n[0],a=n[1],l=n[2],c=0;if(r.some((function(e){return 0!==t[e]}))){for(i in a)o.o(a,i)&&(o.m[i]=a[i]);if(l)var d=l(o)}for(e&&e(n);c<r.length;c++)s=r[c],o.o(t,s)&&t[s]&&t[s][0](),t[s]=0;return o.O(d)},n=self["webpackChunknetwork_graph_calculator"]=self["webpackChunknetwork_graph_calculator"]||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))}();var n=o.O(void 0,[998],(function(){return o(9759)}));n=o.O(n)})();
//# sourceMappingURL=app.6171f422.js.map